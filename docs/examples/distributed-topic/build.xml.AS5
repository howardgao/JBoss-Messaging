<?xml version="1.0" encoding="UTF-8"?>

<!--

   To run the example, set JBOSS_HOME and run ant (with no parameters)

   $Id: build.xml 5392 2008-11-20 00:41:52Z clebert.suconic@jboss.com $

 -->

<project name="DistributedTopicExample" default="run">

	<property environment="ENV" />

	<!-- These properties may be overriden by calling ants when this example is used in a smoke test -->
	<condition property="jboss.home" value="${ENV.JBOSS_HOME}" else="../../../">
       <isset property="ENV.JBOSS_HOME" />
    </condition>

	<property name="messaging.client.jar.name" value="${jboss.home}/client/jboss-messaging-client.jar" />
	<property name="jboss.configuration" value="messaging-node0" />
	<property name="jboss.configuration1" value="messaging-node1" />
	<property name="example.topic.name" value="testDistributedTopic" />
	
	<property name="ej3-extension" value="jar"/>

	<path id="common.compilation.classpath">
		<fileset file="${jboss.home}/client/jboss-javaee.jar" />
		<fileset file="${messaging.client.jar.name}" />
	</path>

	<path id="example.compilation.classpath">
		<path refid="common.compilation.classpath" />
		<pathelement path="../common/output/classes" />
	</path>

	<path id="execution.classpath">
		<pathelement path="./etc" />
		<pathelement path="../common/output/classes" />
		<pathelement path="./output/classes" />
		<fileset dir="${jboss.home}/client" includes="*.jar" />
	</path>

	<target name="identify">
		<echo message="###########################################################################" />
		<echo message="#                Running the DISTRIBUTED TOPIC example                    #" />
		<echo message="###########################################################################" />
		<echo message="The topic:      ${example.topic.name}" />
		<echo message="The client jar: ${messaging.client.jar.name}" />
	</target>

	<target name="sanity-check" depends="identify">
		<available property="client.jar.present" file="${messaging.client.jar.name}" />
		<fail message="Could not find client jar ${messaging.client.jar.name}" unless="client.jar.present" />
	</target>

	<target name="init" depends="sanity-check">
		<mkdir dir="./output/classes" />
		<mkdir dir="../common/output/classes" />
	</target>

	<target name="compile" depends="init">
		<javac destdir="../common/output/classes" debug="on" debuglevel="lines,vars,source">
			<src path="../common/src" />
			<classpath refid="common.compilation.classpath" />
		</javac>
		<javac destdir="./output/classes" debug="on" debuglevel="lines,vars,source">
			<src path="./src" />
			<classpath refid="example.compilation.classpath" />
		</javac>
	</target>

	<target name="deploy">
        <copy file="./etc/topic-destinations-service.xml" todir="${jboss.home}/server/${jboss.configuration}/deploy" />
        <antcall target="sleep">
           <param name="sleep.interval" value="3" />
        </antcall>
        <copy file="./etc/topic-destinations-service.xml" todir="${jboss.home}/server/${jboss.configuration1}/deploy" />
        <antcall target="sleep">
           <param name="sleep.interval" value="15" />
        </antcall>
	</target>

	<target name="run" depends="compile, deploy">
		<!--
           DistributedTopicExample expects to find the name of the topic to connect to as value of
           the 'example.topic.name' property, which *may* be defined by calling ant when this
           example is used in a smoke test.
      -->
		<java classname="org.jboss.example.jms.distributedtopic.DistributedTopicExample" classpathref="execution.classpath" fork="yes" failonerror="true">
			<sysproperty key="example.topic.name" value="${example.topic.name}" />
			<!--
         <jvmarg line="-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_shmem,server=y,suspend=y,address=example"/>
          -->
		</java>
		<antcall target="undeploy" />
	</target>

	<target name="undeploy">
		<delete file="${jboss.home}/server/${jboss.configuration}/deploy/topic-destinations-service.xml" quiet="true" />
		<delete file="${jboss.home}/server/${jboss.configuration1}/deploy/topic-destinations-service.xml" quiet="true" />
	</target>

	<target name="clean" depends="undeploy">
		<delete dir="./output" quiet="true" />
		<delete dir="../common/output" quiet="true" />
	</target>

	<target name="sleep">
		<echo message="Sleeping for ${sleep.interval} seconds ..." />
		<sleep seconds="${sleep.interval}" />
	</target>

</project>

